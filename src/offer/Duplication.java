package offer;

import java.util.HashMap;
import java.util.HashSet;

/**
 * 题目描述
 * 在一个长度为n的数组里的所有数字都在0到n-1的范围内。 数组中某些数字是重复的，但不知道有几个数字是重复的。
 * 也不知道每个数字重复几次。请找出数组中任意一个重复的数字。 例如，如果输入长度为7的数组{2,3,1,0,2,5,3}，
 * 那么对应的输出是第一个重复的数字2。
 */
public class Duplication {
    public boolean duplicate(int numbers[], int length, int[] duplication) {
        if (numbers == null || numbers.length <= 1 || numbers.length != length) {
            return false;
        }
        HashSet<Integer> set = new HashSet<>();
        for (int i = 0; i < length; i++) {
            if (set.contains(numbers[i])) {
                duplication[0] = numbers[i];
                return true;
            } else {
                set.add(numbers[i]);
            }
        }
        return false;
    }

    // 把握住"在一个长度为n的数组里的所有数字都在0到n-1的范围内。"这个条件
    public boolean duplicate2(int numbers[], int length, int[] duplication) {
        if (numbers == null || numbers.length <= 1 || numbers.length != length) {
            return false;
        }

        for (int i = 0; i < length; i++) {
            // 直到当前位置的值为i
            while (numbers[i] != i) {
                if (numbers[i] == numbers[numbers[i]]) {
                    duplication[0] = numbers[i];
                    return true;
                }
                // 交换i与numbers[i]的值
                int temp = numbers[i];
                numbers[i] = numbers[temp];
                numbers[temp] = temp;
            }
        }
        return false;
    }

}
